openapi: 3.1.0
info:
  title: Forma Health API Spec
  description: |
    REST API providing management for user accounts, roles, patient and caregiver profiles, along with topics and clinical studies. Additionally, it facilitates the processing of voice-to-text observations through an advanced Language Model (LLM), structuring them into OMOP (Observational Medical Outcomes Partnership) compliant data for seamless integration and analysis.
  version: 1.0.0
servers:
  - url: https://api-omop-web.onrender.com
tags:
  - name: Test
    description: Test API call
    externalDocs:
        description: Find out more
        url: https://www.formahealth.io/
  - name: Patients
    description: Patients are users who are the subject of observations
paths:
  /v1/test:
    get:
      tags:
        - Test
      summary: Test Okta access token
      responses:
        '200': 
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Test'
              examples:
                TestExample:
                  $ref: '#/components/examples/TestExample'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /v1/patients:
    get:
      tags:
        - Patients
      summary: Get all patients for user
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Patient'
                  meta:
                    $ref: '#/components/schemas/Meta'
              examples:
                GetPatientsExample:
                  $ref: '#/components/examples/GetPatientsExample'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      tags:
        - Patients
      summary: Create a new patient
      requestBody:
        $ref: '#/components/requestBodies/NewPatient'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
              example:
                message: Patient created successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /v1/patients/{local_id}:
    get:
      tags:
        - Patients
      summary: Get a patient by ID
      parameters:
        - in: path
          name: local_id
          schema:
            type: string
          required: true
          description: ID of the patient to retrieve
      responses:
        '200':
          description: Retrieves detailed information about a specific patient by their ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    schema:
                      $ref: '#/components/schemas/Patient'
              examples:
                GetPatientExample:
                  $ref: '#/components/examples/GetPatientExample'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      tags:
        - Patients
      summary: Update a patient by ID
      parameters:
        - in: path
          name: local_id
          schema:
            type: string
          required: true
          description: ID of the patient to update
      requestBody:
        $ref: '#/components/requestBodies/UpdatePatient'
      responses:
        '200':
          description: Updates a patient by their ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: Patient updated successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - Patients
      summary: Delete a patient by ID
      parameters:
        - in: path
          name: local_id
          schema:
            type: string
          required: true
          description: ID of the patient to delete
      responses:
        '200':
          description: Deletes a patient by their ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: Patient deleted successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
          example:
            errors:
              - title: Unauthorized
                status: 401
                detail: Authorization is required
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
          example:
            errors:
              - title: Bad Request
                status: 401
                detail: Bad request. Please check your request and try again.
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
          example:
            errors:
              - title: Record not found
                status: 404
                detail: We could not find the object you were looking for
  requestBodies:
    NewPatient:
      description: A JSON object containing patient information and current user information
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:                
              patient:
                type: object
                schema:
                  $ref: '#/components/schemas/Patient'
              patient_relationship_attributes:
                type: object
                title: string
          examples:
            add patient:
              value:
                patient:
                  local_id: 8e0f94c5-98af-40eb-a162-4a45893fefb7
                  first_name: John
                  last_name: Smith
                  nickname: JS
                  icon_attributes:
                    style: text
                    palette_swatch: red
                    value_text: example_value_text
                    value_emoji: example_value_emoji
                    value_sf_symbol: example_value_sf_symbol
                patient_relationship_attributes:
                  title: nurse
            add self as patient:
              value:
                patient:
                  local_id: 8e0f94c5-98af-40eb-a162-4a45893fefb7
                  first_name: John
                  last_name: Smith
                  nickname: JS
                  icon_attributes:
                    style: text
                    palette_swatch: red
                    value_text: example_value_text
                    value_emoji: example_value_emoji
                    value_sf_symbol: example_value_sf_symbol
                patient_relationship_attributes:
                  title: patient
    UpdatePatient:
      content:
        application/json:
          schema:
            type: object
            properties:
              patient:
                type: object
                schema:
                  $ref: '#/components/schemas/Patient'
              patient_relationship_attributes:
                type: object
                title: string
          example:
            patient:
              nickname: Nate
              icon_attributes:
                palette_swatch: blue
            patient_relationship_attributes:
              title: caregiver
  schemas:
    Test:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          type: object
          properties:
            okta_uid:
              type: string
    Patient:
      type: object
      properties:
        id:
          type: string
        local_id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        nickname: 
          type: string
        updated_at:
          type: integer
          format: int64 UTC Milliseconds
        icon:
          $ref: '#/components/schemas/Icon'
        caregivers:
          type: array
          items:
            $ref: '#/components/schemas/Caregiver'
    Icon:
      type: object
      properties:
        style:
          type: string
        palette_swatch:
          type: string
        value_text:
          type: string
        value_emoji:
          type: string
        value_sf_symbol:
          type: string
    Caregiver:
      type: object
      properties:
        id:
          type: string
        local_id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        nickname: 
          type: string
        title:
          type: string
        updated_at:
          type: integer
          format: int64 UTC Milliseconds
        icon:
          $ref: '#/components/schemas/Icon'
    Meta:
      type: object
      properties:
        current_page: 
          type: integer
        next_page:
          type: integer
        prev_page:
          type: integer
        totol_pages:
          type: integer
        total_count:
          type: integer
    Error:
      type: object
      properties:
        title:
          type: string
        status:
          type: integer
        detail:
          type: string
  examples:
    TestExample:
      value:
        success: true
        message: Hello, Kim!
        data:
          okta_uid: example_okta_uid
    IconExample:
      value:
        icon:
          style: text
          palette_swatch: red
          value_text: example_value_text
          value_emoji: example_value_emoji
          value_sf_symbol: example_value_sf_symbol
    GetPatientsExample:
      value:
        data:
          - id: 38734022-af86-473c-8a9a-be7671c9c1fc
            local_id: 5fe55fb7-e69f-49bf-b977-9045e6c63a0c
            first_name: Jessica
            last_name: White
            nickname: JW
            updated_at: 1712270287
            icon:
              style: text
              palette_swatch: red
              value_text: example_value_text
              value_emoji: example_value_emoji
              value_sf_symbol: example_value_sf_symbol
            caregivers:
              - id: 8e0f94c5-98af-40eb-a162-4a45893fefb7
                local_id: cd744f6b-89d4-47a7-8a0e-84f1d6da62bb
                first_name: Jack
                last_name: Black
                nickname: JB
                title: caregiver
                updated_at: 1712270288
                icon:
                  style: text
                  palette_swatch: mint
                  value_text: example_value_text
                  value_emoji: example_value_emoji
                  value_sf_symbol: example_value_sf_symbol
              - id: 86efba48-0c19-4117-822a-8675f31fba82
                local_id: 906bde4b-1994-4118-acbb-e4ccece9953a
                first_name: Vicki
                last_name: Dooley
                nickname: OW
                title: babysitter
                icon: null
        meta:
          current_page: 1
          next_page: null
          prev_page: null
          total_pages: 1
          total_count: 2
    GetPatientExample:
      value:
        data:
          id: 38734022-af86-473c-8a9a-be7671c9c1fc
          local_id: 5fe55fb7-e69f-49bf-b977-9045e6c63a0c
          first_name: Jessica
          last_name: White
          nickname: JW
          updated_at: 1712270287
          icon:
            style: text
            palette_swatch: red
            value_text: example_value_text
            value_emoji: example_value_emoji
            value_sf_symbol: example_value_sf_symbol
          caregivers:
            - id: 8e0f94c5-98af-40eb-a162-4a45893fefb7
              local_id: cd744f6b-89d4-47a7-8a0e-84f1d6da62bb
              first_name: Jack
              last_name: Black
              nickname: JB
              title: doctor
              updated_at: 1712270288
              icon:
                style: text
                palette_swatch: mint
                value_text: example_value_text
                value_emoji: example_value_emoji
                value_sf_symbol: example_value_sf_symbol
security:
  - bearerAuth: []
